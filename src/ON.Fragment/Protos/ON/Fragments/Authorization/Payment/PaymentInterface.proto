syntax = "proto3";

package ON.Fragments.Authorization.Payment;

import "google/api/annotations.proto";
import "Protos/ON/Fragments/Authorization/Payment/Crypto/CryptoRecords.proto";
import "Protos/ON/Fragments/Authorization/Payment/Fake/FakeSubscriptionRecord.proto";
import "Protos/ON/Fragments/Authorization/Payment/Paypal/PaypalRecords.proto";
import "Protos/ON/Fragments/Authorization/Payment/Paypal/PaypalSubscriptionRecord.proto";
import "Protos/ON/Fragments/Authorization/Payment/Stripe/StripeRecords.proto";
import "Protos/ON/Fragments/Authorization/Payment/Stripe/StripeSubscriptionRecord.proto";

service PaymentInterface {
  rpc GetNewDetails (GetNewDetailsRequest) returns (GetNewDetailsResponse)
  {
    option (google.api.http) = {
      get: "/api/payment/new/{Level}"
    };
  }

  rpc GetOwnSubscriptionRecords (GetOwnSubscriptionRecordsRequest) returns (GetOwnSubscriptionRecordsResponse)
  {
    option (google.api.http) = {
      get: "/api/payment/subscription"
    };
  }
}

message GetNewDetailsRequest {
  uint32 Level = 1;
}

message GetNewDetailsResponse {
  Crypto.CryptoNewDetails Crypto = 1;
  Paypal.PaypalNewDetails Paypal = 5;
  Stripe.StripeNewDetails Stripe = 6;
}


message GetOwnSubscriptionRecordsRequest {
}

message GetOwnSubscriptionRecordsResponse {
    Fake.FakeSubscriptionRecord Fake = 2;
    repeated Paypal.PaypalSubscriptionFullRecord Paypal = 5;
    repeated Stripe.StripeSubscriptionFullRecord Stripe = 6;
}
