syntax = "proto3";

package ON.Fragments.Content;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "Protos/ON/Fragments/Content/ContentRecord.proto";

// Service for Content fragment interface
service ContentInterface {
  rpc CreateContent (CreateContentRequest) returns (CreateContentResponse)
  {
    option (google.api.http) = {
      post: "/api/cms/content"
      body: "*"
    };
  }
  rpc GetAllContent (GetAllContentRequest) returns (GetAllContentResponse)
  {
    option (google.api.http) = {
      get: "/api/cms/content"
    };
  }
  rpc GetContent (GetContentRequest) returns (GetContentResponse)
  {
    option (google.api.http) = {
      get: "/api/cms/content/{ContentID}"
    };
  }
  rpc ModifyContent (ModifyContentRequest) returns (ModifyContentResponse)
  {
    option (google.api.http) = {
      post: "/api/cms/content/{ContentID}"
      body: "*"
    };
  }
  rpc PublishContent (PublishContentRequest) returns (PublishContentResponse)
  {
    option (google.api.http) = {
      post: "/api/cms/content/{ContentID}/publish"
    };
  }
  rpc UnpublishContent (UnpublishContentRequest) returns (UnpublishContentResponse)
  {
    option (google.api.http) = {
      post: "/api/cms/content/{ContentID}/unpublish"
    };
  }

  rpc UploadVideoRumble(UploadVideoRumbleRequest) returns (UploadVideoRumbleResponse) {}
}
  
message CreateContentRequest {
    string Title = 1;
    string Subtitle = 2;
    string Author = 3;
    string Body = 4;
    uint32 SubscriptionLevel = 5;
}
  
message CreateContentResponse {
  ContentRecord.PublicData Content = 1;
}

message GetAllContentRequest {
}
  
message GetAllContentResponse {
  repeated ContentListRecord Records = 1;
}
  
message GetContentRequest {
  string ContentID = 1;   // Guid for the content record
}
  
message GetContentResponse {
  ContentRecord.PublicData Content = 1;
}
  
message ModifyContentRequest {
    string ContentID = 1;                          // Guid for the content record
    string Title = 2;
    string Subtitle = 3;
    string Author = 4;
    string Body = 5;
    uint32 SubscriptionLevel = 6;
}
  
message ModifyContentResponse {
  ContentRecord.PublicData Content = 1;
}

message ContentListRecord {
  string ContentID = 1;                          // Guid for the content record
  google.protobuf.Timestamp CreatedOnUTC = 2;   // UTC timestamp when content was created
  google.protobuf.Timestamp PublishedOnUTC = 3; // UTC timestamp when content was published
  string Title = 4;
  string Subtitle = 5;
  uint32 SubscriptionLevel = 6;
}

message PublishContentRequest {
  string ContentID = 1;   // Guid for the content record
}
  
message PublishContentResponse {
  ContentRecord.PublicData Content = 1;
}
  
message UnpublishContentRequest {
  string ContentID = 1;   // Guid for the content record
}
  
message UnpublishContentResponse {
  ContentRecord.PublicData Content = 1;
}

message UploadVideoRumbleRequest 
{
	string Title = 1;
	string Description = 2;
	int32 LicenseType = 3;
	int32 ChannelId = 4;
	string GUID = 5;
	bytes Thumbnail = 6;
	bytes Video = 7;
	bytes ClosedCaptions = 8;
}

message UploadVideoRumbleResponse {
	bool Success = 1;
	repeated string Errors = 2;
	string EmbedHtml = 3;
	string VideoIdString = 4;
	int32 VideoIdInt = 5;
}
  
