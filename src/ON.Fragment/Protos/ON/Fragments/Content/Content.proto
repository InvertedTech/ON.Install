syntax = "proto3";

package ON.Fragments.Content;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "Protos/ON/Fragments/Content/ContentRecord.proto";

// Service for Content fragment interface
service ContentInterface {
  rpc CreateContent (CreateContentRequest) returns (CreateContentResponse)
  {
    option (google.api.http) = {
      post: "/api/cms/admin/content"
      body: "*"
    };
  }
  rpc GetAllContent (GetAllContentRequest) returns (GetAllContentResponse)
  {
    option (google.api.http) = {
      get: "/api/cms/content"
    };
  }
  rpc GetAllContentAdmin (GetAllContentAdminRequest) returns (GetAllContentAdminResponse)
  {
    option (google.api.http) = {
      get: "/api/cms/admin/content"
    };
  }
  rpc GetContent (GetContentRequest) returns (GetContentResponse)
  {
    option (google.api.http) = {
      get: "/api/cms/content/{ContentID}"
    };
  }
  rpc GetContentAdmin (GetContentAdminRequest) returns (GetContentAdminResponse)
  {
    option (google.api.http) = {
      get: "/api/cms/admin/content/{ContentID}"
    };
  }
  rpc ModifyContent (ModifyContentRequest) returns (ModifyContentResponse)
  {
    option (google.api.http) = {
      post: "/api/cms/admin/content/{ContentID}"
      body: "*"
    };
  }
  rpc PublishContent (PublishContentRequest) returns (PublishContentResponse)
  {
    option (google.api.http) = {
      post: "/api/cms/admin/content/{ContentID}/publish"
    };
  }
  rpc UnpublishContent (UnpublishContentRequest) returns (UnpublishContentResponse)
  {
    option (google.api.http) = {
      post: "/api/cms/admin/content/{ContentID}/unpublish"
    };
  }
}
  
message CreateContentRequest {
  ContentPublicData Public = 1;
  ContentPrivateData Private = 2;
}
  
message CreateContentResponse {
  ContentRecord Record = 1;
}

message GetAllContentRequest {
}
  
message GetAllContentResponse {
  repeated ContentListRecord Records = 1;
}
  
message GetAllContentAdminRequest {
}
  
message GetAllContentAdminResponse {
  repeated ContentListRecord Records = 1;
}
  
message GetContentRequest {
  string ContentID = 1;   // Guid for the content record
}
  
message GetContentResponse {
  ContentPublicRecord Record = 1;
}
  
message GetContentAdminRequest {
  string ContentID = 1;   // Guid for the content record
}
  
message GetContentAdminResponse {
  ContentRecord Record = 1;
}
  
message ModifyContentRequest {
  string ContentID = 1;   // Guid for the content record
  ContentPublicData Public = 2;
  ContentPrivateData Private = 3;
}
  
message ModifyContentResponse {
  ContentRecord Record = 1;
}

message ContentListRecord {
  string ContentID = 1;                         // Guid for the content record
  google.protobuf.Timestamp CreatedOnUTC = 2;   // UTC timestamp when content was created
  google.protobuf.Timestamp PublishOnUTC = 3; // UTC timestamp when content was published
  string Title = 4;
  string Description = 5;
  uint32 SubscriptionLevel = 6;
  ContentType ContentType = 21;
}

message PublishContentRequest {
  string ContentID = 1;   // Guid for the content record
  google.protobuf.Timestamp PublishOnUTC = 3; // UTC timestamp when content was published
}
  
message PublishContentResponse {
  ContentRecord Record = 1;
}
  
message UnpublishContentRequest {
  string ContentID = 1;   // Guid for the content record
}
  
message UnpublishContentResponse {
  ContentRecord Record = 1;
}
  
enum ContentType {
  None = 0;
  Audio = 1;
  Picture = 2;
  Video = 3;
  Written = 4;
}