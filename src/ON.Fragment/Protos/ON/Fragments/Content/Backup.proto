syntax = "proto3";

package ON.Fragments.Content;

import "Protos/ON/Fragments/Content/ContentRecord.proto";

// Service for Content backup fragment interface
service BackupInterface {
  // Export a list of all data.
  rpc BackupAllData (BackupAllDataRequest) returns (stream BackupAllDataResponse) {}

  // Export a list of all public data.
  rpc ExportContent (ExportContentRequest) returns (stream ExportContentResponse) {}

  // Restore a list of all data.
  rpc RestoreAllData (stream RestoreAllDataRequest) returns (RestoreAllDataResponse) {}
}
  
message BackupAllDataRequest {
  string ClientPublicJwk = 1;
}
  
message BackupAllDataResponse {
  oneof Response_oneof {
    string ServerPublicJwk = 1;
    EncryptedContentBackupDataRecord EncryptedRecord = 10;
  }
}

message ContentBackupDataRecord {
  bytes ExtraData = 1; // Generic byte structure to save all application specific data for content record
  ContentRecord Data = 2; // Structured content data, including both private and public data
}

message EncryptedContentBackupDataRecord {
  bytes EncryptionIV = 1;
  bytes Data = 10;
}

message ExportContentRequest {}

message ExportContentResponse {
  ContentRecord.PublicData ContentRecord = 1;
}

message RestoreAllDataRequest {
  oneof Request_oneof {
    RestoreMode Mode = 1;
    ContentBackupDataRecord Record = 10;
  }

  enum RestoreMode {
    Wipe = 0;         // Wipe entire content database and restore content.  Any data new content will be deleted.
    Overwrite = 1;    // Overwrite all records with corresponding record.  Will not delete new records not in list.
    MissingOnly = 2;  // Only restore missing content records.  Will not overwrite content records that already exist.
  }
}

message RestoreAllDataResponse {
  int32 NumRecordsRestored = 1;
  int32 NumRecordsSkipped = 2;
  int32 NumRecordsOverwriten = 3;
  int32 NumRecordsWiped = 4;
}
